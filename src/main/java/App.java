import java.util.*;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }


    public String bestCharge(List<String> inputs) {
        //TODO: write code here
        String result=null;
        double allPrice=0;
        double finalPirce=0;
        double salesPromotionType=0;
        double promotionPrice=0;
        double finalPromotionPrice=0;
        String promotion=null;
        List<String> relatedItems=new ArrayList<>();
        List<String> relatedItemsName=new ArrayList<>();
        Map<String,String> map=new HashMap<String,String>();
        String[] temp=new String[2];
        for(String input:inputs){
            temp=input.split(" x ");
            map.put(temp[0],temp[1]);
        }
        List<SalesPromotion> salesPromotions = salesPromotionRepository.findAll();
        List<Item> items = itemRepository.findAll();
        ArrayList<Item> buys = new ArrayList<>();
        for(Item item:items){
            if(map.containsKey(item.getId())){
                buys.add(item);
            }
        }
        for(SalesPromotion salesPromotion:salesPromotions ){
            if(salesPromotion.getType()=="BUY_30_SAVE_6_YUAN"){
                for(Item item:buys){
                    allPrice+=item.getPrice()*Integer.parseInt(map.get(item.getId()));
                }
                if(allPrice>=30){
                    allPrice-=6;
                    promotionPrice=6;
                    salesPromotionType=1;
                    promotion=salesPromotion.getDisplayName();
                }
                finalPirce=allPrice;
                System.out.println("1"+":"+finalPirce);
                finalPromotionPrice=promotionPrice;
                promotionPrice=0;
                allPrice=0;
            }
            if(salesPromotion.getType()=="50%_DISCOUNT_ON_SPECIFIED_ITEMS"){
                relatedItems = salesPromotion.getRelatedItems();
                for(Item item:buys){
                    boolean related=false;
                    for(String relatedItem:relatedItems){
                        if(item.getId()==relatedItem){
                            allPrice+=item.getPrice()/2*Integer.parseInt(map.get(item.getId()));
                            relatedItemsName.add(item.getName());
                            related=true;
                            promotionPrice+=item.getPrice()/2*Integer.parseInt(map.get(item.getId()));
                        }
                    }
                    if(!related){
                        allPrice+=item.getPrice()*Integer.parseInt(map.get(item.getId()));
                    }
                }
                if(allPrice<finalPirce){
                    finalPirce=allPrice;
                    salesPromotionType=2;
                    finalPromotionPrice=promotionPrice;
                    promotion=salesPromotion.getDisplayName();
                }
            }
        }
        System.out.println(finalPirce);//0
        if(salesPromotionType==0){
            result="============= 订餐明细 =============\n";
            for(Item item:buys){
                result+=item.getName()+" x "+map.get(item.getId())+" = "+(int)(Integer.parseInt(map.get(item.getId()))*item.getPrice())+"元\n";
            }
            result+="-----------------------------------\n"+"总计："+(int)finalPirce+"元\n"+"===================================";
        }else if(salesPromotionType==1){
            result="============= 订餐明细 =============\n";
            for(Item item:buys){
                result+=item.getName()+" x "+map.get(item.getId())+" = "+(int)(Integer.parseInt(map.get(item.getId()))*item.getPrice())+"元\n";
            }
            result+="-----------------------------------\n"+"使用优惠:\n"+promotion+"，省"+(int)finalPromotionPrice+"元\n";
            result+="-----------------------------------\n"+"总计："+(int)finalPirce+"元\n"+"===================================";
        }else{
            String itemList="";
           for(int i=0;i<relatedItemsName.size();i++){
               if(i==relatedItemsName.size()-1){
                   itemList+=relatedItemsName.get(i);
                   continue;
               }
               itemList+=relatedItemsName.get(i)+"，";
           }
            result="============= 订餐明细 =============\n";
            for(Item item:buys){
                result=result+item.getName()+" x "+map.get(item.getId())+" = "+(int)(Integer.parseInt(map.get(item.getId()))*item.getPrice())+"元\n";
            }
            result+="-----------------------------------\n"+"使用优惠:\n"+promotion+"("+itemList+")"+"，省"+(int)finalPromotionPrice+"元\n";
            result+="-----------------------------------\n"+"总计："+(int)finalPirce+"元\n"+"===================================";
        }
        return result;
    }


}
